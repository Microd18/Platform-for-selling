--comment: Create ad_images table.
create table if not exists ad_images
(
    id         integer generated by default as identity
    primary key,
    file_name  varchar(255),
    file_path  varchar(255)         not null,
    file_size  bigint,
    media_type varchar(255)
    );

--comment: Create user_images table.
create table if not exists user_images
(
    id         integer generated by default as identity
    primary key,
    file_name  varchar(255),
    file_path  varchar(255)         not null,
    file_size  bigint,
    media_type varchar(255)
    );

--comment: Create users table.
create table if not exists users
(
    id            integer generated by default as identity
    primary key,
    first_name    varchar(255)      not null,
    last_name     varchar(255)      not null,
    login         varchar(255)      not null        unique,
    password      varchar(255)      not null,
    phone         varchar(255)      not null,
    role          varchar(255)      not null,
    user_image_id integer
    constraint fk_users_user_images references user_images(id)
    );

--comment: Create ads table.
create table if not exists ads
(
    id          integer generated by default as identity
    primary key,
    description varchar(255),
    price       integer             not null,
    title       varchar(255)        not null,
    image_id    integer
    constraint fk_ads_ad_images references ad_images(id),
    user_id     integer             not null
    constraint fk_ads_users references users(id)
    );

--comment: Create comments table.
create table if not exists comments
(
    id         integer generated by default as identity
    primary key,
    created_at timestamp default current_timestamp,
    text       varchar(255)         not null,
    ad_id      integer              not null
    constraint fk_comments_ads references ads(id),
    user_id    integer              not null
    constraint fk_comments_users references users(id)
    );

INSERT INTO users (first_name, last_name, login, password, phone, role)
VALUES ('User1FirstName', 'User1LastName', 'user1@gmail.com', '$2a$10$MHL3Zn3W4IjGtGkEQ3/t0ef2rJkJjRoNn2D1TroRTez1SlKZaC0Wu', '+7 (000) 000-00-01', 'USER');

INSERT INTO users (first_name, last_name, login, password, phone, role)
VALUES ('User2FirstName', 'User2LastName', 'user2@gmail.com', '$2a$10$MHL3Zn3W4IjGtGkEQ3/t0ef2rJkJjRoNn2D1TroRTez1SlKZaC0Wu', '+7 (000) 000-00-02', 'USER');

INSERT INTO users (first_name, last_name, login, password, phone, role)
VALUES ('AdminFirstName', 'AdminLastName', 'admin@gmail.com', '$2a$10$MHL3Zn3W4IjGtGkEQ3/t0ef2rJkJjRoNn2D1TroRTez1SlKZaC0Wu', '+7 (000) 000-00-03', 'ADMIN');

INSERT INTO user_images (file_name, file_path, file_size, media_type)
VALUES ('user1-avatar.jpg', '/images/user1-avatar.jpg', 42361, 'image/jpeg');

INSERT INTO user_images (file_name, file_path, file_size, media_type)
VALUES ('user2-avatar.png', '/images/user2-avatar.png', 59978, 'image/png');

UPDATE users SET user_image_id = 1 WHERE id = 1;
UPDATE users SET user_image_id = 2 WHERE id = 2; 

INSERT INTO ads (description, price, title, user_id)
VALUES ('Ad1Description', 100, 'Ad1Title', 1);

INSERT INTO ads (description, price, title, user_id)
VALUES ('Ad2Description', 150, 'Ad2Title', 2);

INSERT INTO ad_images (file_name, file_path, file_size, media_type)
VALUES ('ad1-image.png', '/images/ad1-image.png', 2327754, 'image/png');

INSERT INTO ad_images (file_name, file_path, file_size, media_type)
VALUES ('ad2-image.png', '/images/ad2-image.png', 1043762, 'image/png');

UPDATE ads SET image_id = 1 WHERE id = 1;
UPDATE ads SET image_id = 2 WHERE id = 2;

INSERT INTO comments (text, ad_id, user_id)
VALUES ('Comment1 by Ad1 Author', 1, 1);

INSERT INTO comments (text, ad_id, user_id)
VALUES ('Comment2 by Another User', 1, 2);

INSERT INTO comments (text, ad_id, user_id)
VALUES ('Comment3 by Another User', 2, 1);

INSERT INTO comments (text, ad_id, user_id)
VALUES ('Comment4 by Ad2 Author', 2, 2); 